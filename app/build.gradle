apply plugin: 'com.android.application'
apply plugin: 'checkstyle'
apply plugin: 'pmd'

dependencies {
    implementation "com.android.support:support-v4:25.3.1"
    implementation "com.android.support:appcompat-v7:25.3.1"
    implementation "com.android.support:gridlayout-v7:25.3.1"
    implementation "com.android.support:support-annotations:25.3.1"
    implementation "com.android.support:recyclerview-v7:25.3.1"
    implementation "com.android.support:cardview-v7:25.3.1"
    implementation "com.android.support:design:25.3.1"
    implementation "com.android.support:support-vector-drawable:25.3.1"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "com.android.support:palette-v7:25.3.1"

    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    implementation 'com.google.zxing:core:3.3.2'
    implementation 'eu.chainfire:libsuperuser:1.0.0.201602271131'
    implementation 'cc.mvdan.accesspoint:library:0.2.0'
    implementation 'info.guardianproject.netcipher:netcipher:2.1.0'
    implementation "info.guardianproject.panic:panic:1.0"
    implementation 'commons-io:commons-io:2.5'
    implementation 'commons-net:commons-net:3.5'
    implementation 'org.jmdns:jmdns:3.5.3'
    implementation 'ch.acra:acra:4.9.1'
    implementation 'io.reactivex:rxjava:1.1.0'
    implementation 'io.reactivex:rxandroid:0.23.0'
    implementation 'com.hannesdorfmann:adapterdelegates3:3.0.1'

    // Migrate this to upstream https://github.com/Ashok-Varma/BottomNavigation if PR #110 gets
    // accepted to drop the minSdk to 10.
    implementation('com.github.pserwylo:BottomNavigation:1.5.0')

    implementation 'com.fasterxml.jackson.core:jackson-core:2.8.7'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.8.7'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.7'

    testImplementation "org.robolectric:robolectric:3.3.2"
    testImplementation 'junit:junit:4.12'
    // As per https://github.com/robolectric/robolectric/issues/1932#issuecomment-219796474
    testImplementation 'org.khronos:opengl-api:gl1.1-android-2.1_r1'
    testImplementation "org.mockito:mockito-core:1.10.19"

    androidTestImplementation "com.android.support:support-annotations:25.3.1"
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test:rules:0.5'
}

if (!hasProperty('sourceDeps')) {

    repositories {
        // This is here until we sort out all dependencies from mavenCentral/jcenter. Once all of
        // the dependencies below have been sorted out, this can be removed.
        flatDir {
            dirs 'libs/binaryDeps'
        }
    }

    dependencies {
        implementation 'com.madgag.spongycastle:pkix:1.54.0.0'
        implementation 'com.madgag.spongycastle:prov:1.54.0.0'
        implementation 'com.madgag.spongycastle:core:1.54.0.0'

        // Upstream doesn't have a binary on mavenCentral/jcenter yet:
        // https://github.com/kolavar/android-support-v4-preferencefragment/issues/13
        implementation(name: 'support-v4-preferencefragment-release', ext: 'aar')

        // Fork for F-Droid, including support for https. Not merged into upstream
        // yet (seems to be a little unsupported as of late), so not using mavenCentral/jcenter.
        implementation(name: 'nanohttpd-2.1.0')

        // Upstream doesn't have a binary on mavenCentral, and it is an SVN repo on
        // Google Code.  We include this code directly in this repo, and have made
        // modifications that should be pushed to anyone who wants to maintain it.
        implementation(name: 'zipsigner')
    }

} else {

    logger.info "Setting up *source* dependencies for F-Droid (because you passed in the -PsourceDeps argument to gradle while building)."

    dependencies {
        implementation(project(':extern:support-v4-preferencefragment')) {
            exclude module: 'support-v4'
        }
        implementation project(':extern:nanohttpd:core')
        implementation project(':extern:zipsigner')
    }

    task binaryDeps(type: Copy, dependsOn: ':app:prepareReleaseDependencies') {

        enabled = project.hasProperty('sourceDeps')
        description = "Copies .jar and .aar files from subproject dependencies in extern/ to app/libs. Requires the sourceDeps property to be set (\"gradle -PsourceDeps binaryDeps\")"

        from('../extern/') {
            include 'support-v4-preferencefragment/build/outputs/aar/support-v4-preferencefragment-release.aar'
            include 'nanohttpd/core/build/libs/nanohttpd-2.1.0.jar'
            include 'zipsigner/build/libs/zipsigner.jar'
        }

        into 'libs/binaryDeps'
        includeEmptyDirs false

        eachFile { FileCopyDetails details ->
            // Don't copy to a sub folder such as libs/binaryDeps/Project/build/outputs/aar/project.aar, but
            // rather libs/binaryDeps/project.aar.
            details.path = details.name
        }
    }
}

android {
    compileSdkVersion 33
    buildToolsVersion '33.0.1'

    buildTypes {
        // use proguard on debug too since we have unknowingly broken
        // release builds before.
        all {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'src/androidTest/proguard-rules.pro'
        }
    }

    compileOptions {
        compileOptions.encoding = "UTF-8"

        // Use Java 1.7, requires minSdk 8
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    aaptOptions {
        cruncherEnabled = false
    }

    defaultConfig {
        versionCode Integer.parseInt(("1022" + "010000"), 10)  //Integer.MAX_VALUE == 2147483647
        versionName 'fork/1.2.2/v1.0.0'
        archivesBaseName = 'fdroidclient-1.02.2-fork-v1.0.0'
        minSdkVersion 10
        targetSdkVersion 24
        applicationId 'org.fdroid.fdroid'
        resValue "string", "applicationId", applicationId
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "applicationId", defaultConfig.applicationId + applicationIdSuffix
            versionNameSuffix "-debug"
        }
    }

    testOptions {
        unitTests {
            // prevent tests from dying on android.util.Log calls
            returnDefaultValues = true
            all {
                // All the usual Gradle options.
                testLogging {
                    events "skipped", "failed", "standardOut", "standardError"
                    showStandardStreams = true
                }
            }
        }
    }

    sourceSets {
        test {
            java.srcDirs += "$projectDir/src/testShared/java"
        }

        androidTest {
            java.srcDirs += "$projectDir/src/testShared/java"
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError true

        htmlReport true
        xmlReport false
        textReport false

        lintConfig file("lint.xml")
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/INDEX.LIST'
        exclude '.readme'
    }
}

checkstyle {
    toolVersion = '7.2'
}

task checkstyle(type: Checkstyle) {
    configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    source 'src/main/java', 'src/test/java', 'src/androidTest/java'
    include '**/*.java'

    classpath = files()
}

pmd {
    toolVersion = '6.20.0'
    consoleOutput = true
}

task pmdMain(type: Pmd) {
    dependsOn 'assembleDebug'
    ruleSetFiles = files("${project.rootDir}/config/pmd/rules.xml", "${project.rootDir}/config/pmd/rules-main.xml")
    ruleSets = [] // otherwise defaults clash with the list in rules.xml
    source 'src/main/java'
    include '**/*.java'
}

task pmdTest(type: Pmd) {
    dependsOn 'assembleDebug'
    ruleSetFiles = files("${project.rootDir}/config/pmd/rules.xml", "${project.rootDir}/config/pmd/rules-test.xml")
    ruleSets = [] // otherwise defaults clash with the list in rules.xml
    source 'src/test/java', 'src/androidTest/java'
    include '**/*.java'
}

task pmd(dependsOn: [pmdMain, pmdTest]) {}
